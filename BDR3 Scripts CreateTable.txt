create database erronka3 CHARACTER SET utf8 COLLATE utf8_general_ci;
use erronka3;

create table Productos(
IDProducto integer primary key AUTO_INCREMENT,
PrecioCompraProd float not null constraint PrecioCompraProd check (PrecioCompraProd > 0),
FechaCad date not null,
TipoProd varchar(25) not null,
NomProd varchar(20) not null,
PrecioVentaProd float not null constraint PrecioVentaProd check (PrecioVentaProd > 0) not null
);

create table Local(
NIF char(9) primary key,
TipoDeNegocio enum ('Bar','Cafeteria','Restaurante') not null,
Nombre varchar(20) not null,
Direccion varchar(40) not null,
NombreProp varchar(20) not null
);

create table Tiene(
NIF char(9) ,
IDProducto integer auto_increment,
StockProd integer not null constraint StockProd check (StockProd > 0),
constraint PK_Tiene primary key (NIF,IDProducto),
constraint FK_TieneIDProducto foreign key (IDProducto) references Productos(IDProducto),
constraint FK_TieneNIF foreign key (NIF) references Local(NIF)
);

create table operaciones(
IDOperaciones integer primary key auto_increment,
TotOperaciones integer not null,
PrecioTotalOp float not null,
NIF char(9) not null,
constraint FK_OperacionesNIF foreign key (NIF) references Local(NIF)
);

create table Aparecen(
ID integer ,
IDProducto integer ,
NumUniPorProd integer not null constraint NumUniPorProd check (NumUniPorProd > 0),
PrecioPorUnidad float not null constraint PrecioPorUnidad check (PrecioPorUnidad > 0),
PrecioTotPorProd float not null constraint PrecioTotPorProd check (PrecioTotPorProd > 0),
constraint PK_Aparecen primary key (ID, IDProducto),
constraint FK_AparecenID foreign key (ID) references Operaciones(IDOperaciones),
constraint FK_AparecenIDProducto foreign key (IDProducto) references Productos(IDProducto)
);

create table pedido(
ID integer primary key,
DomicilioSioNo enum ('Si','No') not null,
DirDomicilio varchar(50) not null,
constraint FK_PedidoID foreign key (ID) references Operaciones(IDOperaciones)
);

create table Factura(
ID integer not null,
NIF char(9)  primary key,
constraint FK_FacturaID foreign key (ID) references Operaciones(IDOperaciones)
);

create table DesFactura(
NIF char(9) primary key,
NomDes varchar(20) not null,
DirDes varchar (20),
constraint FK_DesFacturaNIF foreign key (NIF) references Factura(NIF)
);

create table Aprovisionamiento(
ID integer primary key auto_increment,
PrecioCompra float not null constraint PrecioCompra check (PrecioCompra > 0),
constraint FK_AprovisionamientoID foreign key (ID) references Operaciones(IDOperaciones)
);

create table Fabricante(
Nombre varchar(20) primary key,
tiempo date not null,
stock integer not null constraint stock check (stock > -1),
ID integer not null,
constraint FK_Fabricantestock foreign key (ID) references Aprovisionamiento(ID)
);

create table Comandas(
codigo integer primary key auto_increment
);

create table Incluye(
IDprod integer,
codigo integer,
constraint PK_Incluye primary key (IDprod,codigo),
constraint FK_IncluyeIDprod foreign key (IDprod) references Productos(IDProducto),
constraint FK_Incluyecodigo foreign key (codigo) references Comandas(codigo)
);

create table Platos(
Codigo integer primary key auto_increment,
PrecioDeVenta float not null constraint PrecioDeVenta check (PrecioDeVenta > 0),
Tipo enum ('Primero','Segundo','Postre') not null,
Nombre varchar(25) not null,
marisco boolean not null,
FrutosSecos boolean not null,
gluten boolean not null,
vegetariano boolean not null,
vegano boolean not null
);

create table contiene(
CodPlatos integer,
CodComandas integer,
constraint PK_TienePl primary key (CodPlatos,CodComandas),
constraint FK_TienePlCodPlatos foreign key (CodPlatos) references Platos(Codigo),
constraint FK_TienePlCodComandas foreign key (CodComandas) references Comandas(codigo)
);


create table usuarios(
usuario char(9) primary key,
contrase√±a varchar(20) not null,
constraint FK_Usuariosusuario foreign key (usuario) references Local(NIF)
);
